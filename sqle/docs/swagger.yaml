basePath: /
definitions:
  controller.BaseRes:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
    type: object
  v1.AuditPlanMetaV1:
    properties:
      audit_plan_params:
        items:
          $ref: '#/definitions/v1.AuditPlanParamResV1'
        type: array
      audit_plan_type:
        type: string
      audit_plan_type_desc:
        type: string
      instance_type:
        type: string
    type: object
  v1.AuditPlanParamReqV1:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  v1.AuditPlanParamResV1:
    properties:
      desc:
        type: string
      key:
        type: string
      type:
        enum:
        - string
        - int
        - bool
        type: string
      value:
        type: string
    type: object
  v1.AuditPlanReportResV1:
    properties:
      audit_plan_report_id:
        example: "1"
        type: string
      audit_plan_report_timestamp:
        example: RFC3339
        type: string
    type: object
  v1.AuditPlanReportSQLResV1:
    properties:
      audit_plan_report_sql_audit_result:
        example: same format as task audit result
        type: string
      audit_plan_report_sql_fingerprint:
        example: select * from t1 where id = ?
        type: string
      audit_plan_report_sql_last_receive_text:
        example: select * from t1 where id = 1
        type: string
      audit_plan_report_sql_last_receive_timestamp:
        example: RFC3339
        type: string
    type: object
  v1.AuditPlanResV1:
    properties:
      audit_plan_cron:
        example: 0 */2 * * *
        type: string
      audit_plan_db_type:
        example: mysql
        type: string
      audit_plan_instance_database:
        example: app1
        type: string
      audit_plan_instance_name:
        example: test_mysql
        type: string
      audit_plan_meta:
        $ref: '#/definitions/v1.AuditPlanMetaV1'
        type: object
      audit_plan_name:
        example: audit_for_java_app1
        type: string
      audit_plan_token:
        example: it's a JWT Token for scanner
        type: string
    type: object
  v1.AuditPlanSQLReqV1:
    properties:
      audit_plan_sql_counter:
        example: "6"
        type: string
      audit_plan_sql_fingerprint:
        example: select * from t1 where id = ?
        type: string
      audit_plan_sql_last_receive_text:
        example: select * from t1 where id = 1
        type: string
      audit_plan_sql_last_receive_timestamp:
        example: RFC3339
        type: string
    type: object
  v1.AuditPlanSQLResV1:
    properties:
      audit_plan_sql_counter:
        example: "6"
        type: string
      audit_plan_sql_fingerprint:
        example: select * from t1 where id = ?
        type: string
      audit_plan_sql_last_receive_text:
        example: select * from t1 where id = 1
        type: string
      audit_plan_sql_last_receive_timestamp:
        example: RFC3339
        type: string
    type: object
  v1.AuditTaskResV1:
    properties:
      audit_level:
        enum:
        - normal
        - notice
        - warn
        - error
        type: string
      exec_end_time:
        type: string
      exec_start_time:
        type: string
      instance_name:
        type: string
      instance_schema:
        example: db1
        type: string
      pass_rate:
        type: number
      score:
        type: integer
      sql_source:
        enum:
        - form_data
        - sql_file
        - mybatis_xml_file
        - audit_plan
        type: string
      status:
        enum:
        - initialized
        - audited
        - executing
        - exec_success
        - exec_failed
        type: string
      task_id:
        type: integer
    type: object
  v1.AuditTaskSQLContentResV1:
    properties:
      sql:
        example: alter table tb1 drop columns c1
        type: string
    type: object
  v1.AuditTaskSQLResV1:
    properties:
      audit_level:
        type: string
      audit_result:
        type: string
      audit_status:
        type: string
      description:
        type: string
      exec_result:
        type: string
      exec_sql:
        type: string
      exec_status:
        type: string
      number:
        type: integer
      rollback_sql:
        type: string
    type: object
  v1.AuditWhitelistResV1:
    properties:
      audit_whitelist_id:
        type: integer
      desc:
        type: string
      match_type:
        type: string
      value:
        type: string
    type: object
  v1.BatchCancelWorkflowsReqV1:
    properties:
      workflow_ids:
        items:
          type: string
        type: array
    type: object
  v1.CheckLicenseResV1:
    properties:
      license:
        items:
          $ref: '#/definitions/v1.LicenseItem'
        type: array
    type: object
  v1.CloneRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      new_rule_template_name:
        type: string
    type: object
  v1.CreateAuditPlanReqV1:
    properties:
      audit_plan_cron:
        example: 0 */2 * * *
        type: string
      audit_plan_instance_database:
        example: app1
        type: string
      audit_plan_instance_name:
        example: test_mysql
        type: string
      audit_plan_instance_type:
        example: mysql
        type: string
      audit_plan_name:
        example: audit_plan_for_java_repo_1
        type: string
      audit_plan_params:
        items:
          $ref: '#/definitions/v1.AuditPlanParamReqV1'
        type: array
      audit_plan_type:
        example: slow log
        type: string
    type: object
  v1.CreateAuditWhitelistReqV1:
    properties:
      desc:
        example: used for rapid release
        type: string
      match_type:
        enum:
        - exact_match
        - fp_match
        example: exact_match
        type: string
      value:
        example: create table
        type: string
    type: object
  v1.CreateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_type:
        example: mysql
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      instance_name:
        example: test
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.CreateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.CreateRuleTemplateReqV1:
    properties:
      db_type:
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_list:
        items:
          $ref: '#/definitions/v1.RuleReqV1'
        type: array
      rule_template_name:
        type: string
    type: object
  v1.CreateUserGroupReqV1:
    properties:
      role_name_list:
        items:
          type: string
        type: array
      user_group_desc:
        example: this is a group
        type: string
      user_group_name:
        example: test
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.CreateUserReqV1:
    properties:
      email:
        example: test@email.com
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_group_name_list:
        items:
          type: string
        type: array
      user_name:
        example: test
        type: string
      user_password:
        example: "123456"
        type: string
    type: object
  v1.CreateWorkflowReqV1:
    properties:
      desc:
        type: string
      task_id:
        type: string
      workflow_subject:
        type: string
    type: object
  v1.CreateWorkflowTemplateReqV1:
    properties:
      allow_submit_when_less_audit_level:
        enum:
        - normal
        - notice
        - warn
        - error
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateReqV1'
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.DashboardResV1:
    properties:
      workflow_statistics:
        $ref: '#/definitions/v1.WorkflowStatisticsResV1'
        type: object
    type: object
  v1.DriversResV1:
    properties:
      driver_name_list:
        items:
          type: string
        type: array
    type: object
  v1.FullSyncAuditPlanSQLsReqV1:
    properties:
      audit_plan_sql_list:
        items:
          $ref: '#/definitions/v1.AuditPlanSQLReqV1'
        type: array
    type: object
  v1.GetAuditPlanMetasResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditPlanMetaV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetAuditPlanReportSQLsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditPlanReportSQLResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditPlanReportsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditPlanReportResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditPlanResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.AuditPlanResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetAuditPlanSQLsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditPlanSQLResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditPlansResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditPlanResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditTaskResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.AuditTaskResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetAuditTaskSQLContentResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.AuditTaskSQLContentResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetAuditTaskSQLsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditTaskSQLResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditWhitelistResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditWhitelistResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetDashboardResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.DashboardResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetDriversResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.DriversResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceConnectableReqV1:
    properties:
      db_type:
        example: mysql
        type: string
      host:
        example: 10.10.10.10
        type: string
      password:
        example: "123456"
        type: string
      port:
        example: "3306"
        type: string
      user:
        example: root
        type: string
    type: object
  v1.GetInstanceConnectableResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceConnectableResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceSchemaResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceSchemaResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceWorkflowTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.WorkflowTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstancesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetLDAPConfigurationResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.LDAPConfigurationResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetLicenseResV1:
    properties:
      license:
        items:
          $ref: '#/definitions/v1.LicenseItem'
        type: array
    type: object
  v1.GetOperationsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.OperationResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRoleTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRolesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRuleTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.RuleTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplateTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplatesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRulesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetSMTPConfigurationResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.SMTPConfigurationResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetSQLEInfoResV1:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
      version:
        type: string
    type: object
  v1.GetSystemVariablesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.SystemVariablesResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserDetailResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserGroupTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserGroupTipListItem'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUserGroupsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserGroupListItemResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetUserLoginResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserLoginResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUsersResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetWorkflowResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.WorkflowResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.WorkflowTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplateTipResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowTemplateTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplatesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowTemplateResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetWorkflowsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowDetailResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.InstanceConnectableResV1:
    properties:
      connect_error_message:
        type: string
      is_instance_connectable:
        type: boolean
    type: object
  v1.InstanceResV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_port:
        example: "3306"
        type: string
      db_type:
        example: mysql
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a instance
        type: string
      instance_name:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.InstanceSchemaResV1:
    properties:
      schema_name_list:
        items:
          type: string
        type: array
    type: object
  v1.InstanceTipResV1:
    properties:
      instance_name:
        type: string
      instance_type:
        type: string
    type: object
  v1.LDAPConfigurationReqV1:
    properties:
      enable_ldap:
        type: boolean
      ldap_connect_dn:
        type: string
      ldap_connect_pwd:
        type: string
      ldap_search_base_dn:
        type: string
      ldap_server_host:
        type: string
      ldap_server_port:
        type: string
      ldap_user_email_rdn_key:
        type: string
      ldap_user_name_rdn_key:
        type: string
    type: object
  v1.LDAPConfigurationResV1:
    properties:
      enable_ldap:
        type: boolean
      ldap_connect_dn:
        type: string
      ldap_search_base_dn:
        type: string
      ldap_server_host:
        type: string
      ldap_server_port:
        type: string
      ldap_user_email_rdn_key:
        type: string
      ldap_user_name_rdn_key:
        type: string
    type: object
  v1.LicenseItem:
    properties:
      description:
        type: string
      limit:
        type: integer
      name:
        type: string
    type: object
  v1.OperationResV1:
    properties:
      op_code:
        type: integer
      op_desc:
        type: string
    type: object
  v1.PartialSyncAuditPlanSQLsReqV1:
    properties:
      audit_plan_sql_list:
        items:
          $ref: '#/definitions/v1.AuditPlanSQLReqV1'
        type: array
    type: object
  v1.PatchUserGroupReqV1:
    properties:
      is_disabled:
        type: boolean
      role_name_list:
        items:
          type: string
        type: array
      user_group_desc:
        example: this is a group
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.RejectWorkflowReqV1:
    properties:
      reason:
        type: string
    type: object
  v1.RoleResV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.RoleTipResV1:
    properties:
      role_name:
        type: string
    type: object
  v1.RuleParamReqV1:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  v1.RuleParamResV1:
    properties:
      desc:
        type: string
      key:
        type: string
      type:
        enum:
        - string
        - int
        - bool
        type: string
      value:
        type: string
    type: object
  v1.RuleReqV1:
    properties:
      level:
        example: error
        type: string
      name:
        example: ddl_check_index_count
        type: string
      params:
        items:
          $ref: '#/definitions/v1.RuleParamReqV1'
        type: array
    type: object
  v1.RuleResV1:
    properties:
      db_type:
        example: mysql
        type: string
      desc:
        type: string
      level:
        enum:
        - normal
        - notice
        - warn
        - error
        example: error
        type: string
      params:
        items:
          $ref: '#/definitions/v1.RuleParamResV1'
        type: array
      rule_name:
        type: string
      type:
        example: 全局配置
        type: string
    type: object
  v1.RuleTemplateDetailResV1:
    properties:
      db_type:
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_list:
        items:
          $ref: '#/definitions/v1.RuleResV1'
        type: array
      rule_template_name:
        type: string
    type: object
  v1.RuleTemplateResV1:
    properties:
      db_type:
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_template_name:
        type: string
    type: object
  v1.RuleTemplateTipResV1:
    properties:
      db_type:
        type: string
      rule_template_name:
        type: string
    type: object
  v1.SMTPConfigurationResV1:
    properties:
      smtp_host:
        type: string
      smtp_port:
        type: string
      smtp_username:
        type: string
    type: object
  v1.SystemVariablesResV1:
    properties:
      workflow_expired_hours:
        type: integer
    type: object
  v1.TriggerAuditPlanResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.AuditPlanReportResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.UpdateAuditPlanReqV1:
    properties:
      audit_plan_cron:
        example: 0 */2 * * *
        type: string
      audit_plan_instance_database:
        example: app1
        type: string
      audit_plan_instance_name:
        example: test_mysql
        type: string
      audit_plan_params:
        items:
          $ref: '#/definitions/v1.AuditPlanParamReqV1'
        type: array
    type: object
  v1.UpdateAuditTaskSQLsReqV1:
    properties:
      description:
        type: string
    type: object
  v1.UpdateAuditWhitelistReqV1:
    properties:
      desc:
        example: used for rapid release
        type: string
      match_type:
        enum:
        - exact_match
        - fp_match
        example: exact_match
        type: string
      value:
        example: create table
        type: string
    type: object
  v1.UpdateCurrentUserPasswordReqV1:
    properties:
      new_password:
        type: string
      password:
        type: string
    type: object
  v1.UpdateCurrentUserReqV1:
    properties:
      email:
        type: string
    type: object
  v1.UpdateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_type:
        example: mysql
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.UpdateOtherUserPasswordReqV1:
    properties:
      password:
        type: string
    type: object
  v1.UpdateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        example:
        - mysql-xxx
        items:
          type: string
        type: array
      rule_list:
        items:
          $ref: '#/definitions/v1.RuleReqV1'
        type: array
    type: object
  v1.UpdateSMTPConfigurationReqV1:
    properties:
      smtp_host:
        example: smtp.email.qq.com
        type: string
      smtp_password:
        example: "123"
        type: string
      smtp_port:
        example: "465"
        type: string
      smtp_username:
        example: test@qq.com
        type: string
    type: object
  v1.UpdateSystemVariablesReqV1:
    properties:
      workflow_expired_hours:
        example: 720
        type: integer
    type: object
  v1.UpdateUserReqV1:
    properties:
      email:
        type: string
      is_disabled:
        type: boolean
      role_name_list:
        items:
          type: string
        type: array
      user_group_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateWorkflowReqV1:
    properties:
      task_id:
        type: string
    type: object
  v1.UpdateWorkflowScheduleV1:
    properties:
      schedule_time:
        type: string
    type: object
  v1.UpdateWorkflowTemplateReqV1:
    properties:
      allow_submit_when_less_audit_level:
        enum:
        - normal
        - notice
        - warn
        - error
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateReqV1'
        type: array
    type: object
  v1.UserDetailResV1:
    properties:
      email:
        type: string
      is_admin:
        type: boolean
      is_disabled:
        type: boolean
      login_type:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_group_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserGroupListItemResV1:
    properties:
      is_disabled:
        type: boolean
      role_name_list:
        items:
          type: string
        type: array
      user_group_desc:
        type: string
      user_group_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UserGroupTipListItem:
    properties:
      user_group_name:
        type: string
    type: object
  v1.UserLoginReqV1:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    type: object
  v1.UserLoginResV1:
    properties:
      token:
        example: this is a jwt token string
        type: string
    type: object
  v1.UserResV1:
    properties:
      email:
        type: string
      is_disabled:
        type: boolean
      login_type:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_group_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserTipResV1:
    properties:
      user_name:
        type: string
    type: object
  v1.WorkFlowStepTemplateReqV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      type:
        enum:
        - sql_review
        - sql_execute
        type: string
    type: object
  v1.WorkFlowStepTemplateResV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      number:
        type: integer
      type:
        type: string
    type: object
  v1.WorkflowDetailResV1:
    properties:
      create_time:
        type: string
      create_user_name:
        type: string
      current_step_assignee_user_name_list:
        items:
          type: string
        type: array
      current_step_type:
        enum:
        - sql_review
        - sql_execute
        type: string
      desc:
        type: string
      schedule_time:
        type: string
      status:
        enum:
        - on_process
        - rejected
        - canceled
        - exec_scheduled
        - executing
        - exec_failed
        - finished
        type: string
      subject:
        type: string
      task_instance_name:
        type: string
      task_instance_schema:
        type: string
      task_pass_rate:
        type: number
      task_score:
        type: integer
      workflow_id:
        type: integer
    type: object
  v1.WorkflowRecordResV1:
    properties:
      current_step_number:
        type: integer
      schedule_time:
        type: string
      schedule_user:
        type: string
      status:
        enum:
        - on_process
        - rejected
        - canceled
        - exec_scheduled
        - executing
        - exec_failed
        - finished
        type: string
      task_id:
        type: integer
      workflow_step_list:
        items:
          $ref: '#/definitions/v1.WorkflowStepResV1'
        type: array
    type: object
  v1.WorkflowResV1:
    properties:
      create_time:
        type: string
      create_user_name:
        type: string
      desc:
        type: string
      record:
        $ref: '#/definitions/v1.WorkflowRecordResV1'
        type: object
      record_history_list:
        items:
          $ref: '#/definitions/v1.WorkflowRecordResV1'
        type: array
      subject:
        type: string
      workflow_id:
        type: integer
    type: object
  v1.WorkflowStatisticsResV1:
    properties:
      my_on_process_workflow_number:
        type: integer
      my_rejected_workflow_number:
        type: integer
      need_me_to_execute_workflow_number:
        type: integer
      need_me_to_review_workflow_number:
        type: integer
    type: object
  v1.WorkflowStepResV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      number:
        type: integer
      operation_time:
        type: string
      operation_user_name:
        type: string
      reason:
        type: string
      state:
        enum:
        - initialized
        - approved
        - rejected
        type: string
      type:
        enum:
        - create_workflow
        - update_workflow
        - sql_review
        - sql_execute
        type: string
      workflow_step_id:
        type: integer
    type: object
  v1.WorkflowTemplateDetailResV1:
    properties:
      allow_submit_when_less_audit_level:
        enum:
        - normal
        - notice
        - warn
        - error
        type: string
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateResV1'
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.WorkflowTemplateResV1:
    properties:
      desc:
        type: string
      workflow_template_name:
        type: string
    type: object
  v1.WorkflowTemplateTipResV1:
    properties:
      workflow_template_name:
        type: string
    type: object
  v2.AuditPlanReportSQLResV2:
    properties:
      audit_plan_report_sql:
        example: select * from t1 where id = 1
        type: string
      audit_plan_report_sql_audit_result:
        example: same format as task audit result
        type: string
    type: object
  v2.AuditPlanSQLHeadV2:
    properties:
      desc:
        type: string
      name:
        type: string
      type:
        enum:
        - sql
        type: string
    type: object
  v2.AuditPlanSQLResV2:
    properties:
      head:
        items:
          $ref: '#/definitions/v2.AuditPlanSQLHeadV2'
        type: array
      rows:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
    type: object
  v2.CreateRoleReqV2:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      operation_code_list:
        items:
          type: integer
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_group_name_list:
        items:
          type: string
        type: array
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v2.GetAuditPlanReportSQLsResV2:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v2.AuditPlanReportSQLResV2'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v2.GetAuditPlanSQLsResV2:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v2.AuditPlanSQLResV2'
        type: object
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v2.GetRolesResV2:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v2.RoleResV2'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v2.Operation:
    properties:
      op_code:
        type: integer
      op_desc:
        type: string
    type: object
  v2.RoleResV2:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      is_disabled:
        type: boolean
      operation_list:
        items:
          $ref: '#/definitions/v2.Operation'
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_group_name_list:
        items:
          type: string
        type: array
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v2.UpdateRoleReqV2:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      is_disabled:
        type: boolean
      operation_code_list:
        items:
          type: integer
        type: array
      role_desc:
        type: string
      user_group_name_list:
        items:
          type: string
        type: array
      user_name_list:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: This is a sample server for dev.
  license: {}
  title: Sqle API Docs
  version: "1.0"
paths:
  /v1/audit_plan_metas:
    get:
      description: get audit plan metas
      operationId: getAuditPlanMetasV1
      parameters:
      - description: filter instance type
        in: query
        name: filter_instance_type
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlanMetasResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审核任务元信息
      tags:
      - audit_plan
  /v1/audit_plans:
    get:
      description: get audit plan info list
      operationId: getAuditPlansV1
      parameters:
      - description: filter audit plan db type
        in: query
        name: filter_audit_plan_db_type
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlansResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审核计划信息列表
      tags:
      - audit_plan
    post:
      consumes:
      - application/json
      description: create audit plan
      operationId: createAuditPlanV1
      parameters:
      - description: create audit plan
        in: body
        name: audit_plan
        required: true
        schema:
          $ref: '#/definitions/v1.CreateAuditPlanReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加审核计划
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/:
    delete:
      description: delete audit plan
      operationId: deleteAuditPlanV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除审核计划
      tags:
      - audit_plan
    get:
      description: get audit plan
      operationId: getAuditPlanV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlanResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划
      tags:
      - audit_plan
    patch:
      description: update audit plan
      operationId: updateAuditPlanV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: update audit plan
        in: body
        name: audit_plan
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateAuditPlanReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新审核计划
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/report/{audit_plan_report_id}/:
    get:
      deprecated: true
      description: get audit plan report SQLs
      operationId: getAuditPlanReportSQLsV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: audit plan report id
        in: path
        name: audit_plan_report_id
        required: true
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlanReportSQLsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划的SQL审核详情
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/reports:
    get:
      description: get audit plan report list
      operationId: getAuditPlanReportsV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlanReportsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划的报告列表
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/sqls:
    get:
      deprecated: true
      description: get audit plan SQLs
      operationId: getAuditPlanSQLsV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditPlanSQLsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划的SQLs信息(不包括审核结果)
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/sqls/full:
    post:
      description: full sync audit plan SQLs
      operationId: fullSyncAuditPlanSQLsV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: full sync audit plan SQLs request
        in: body
        name: sqls
        required: true
        schema:
          $ref: '#/definitions/v1.FullSyncAuditPlanSQLsReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 全量同步SQL到审核计划
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/sqls/partial:
    post:
      description: partial sync audit plan SQLs
      operationId: partialSyncAuditPlanSQLsV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: partial sync audit plan SQLs request
        in: body
        name: sqls
        required: true
        schema:
          $ref: '#/definitions/v1.PartialSyncAuditPlanSQLsReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 增量同步SQL到审核计划
      tags:
      - audit_plan
  /v1/audit_plans/{audit_plan_name}/trigger:
    post:
      description: trigger audit plan
      operationId: triggerAuditPlanV1
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TriggerAuditPlanResV1'
      security:
      - ApiKeyAuth: []
      summary: 触发审核计划
      tags:
      - audit_plan
  /v1/audit_whitelist:
    get:
      description: get all whitelist
      operationId: getAuditWhitelistV1
      parameters:
      - description: page index
        in: query
        name: page_index
        type: string
      - description: page size
        in: query
        name: page_size
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditWhitelistResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取Sql审核白名单
      tags:
      - audit_whitelist
    post:
      consumes:
      - application/json
      description: create a sql whitelist
      operationId: createAuditWhitelistV1
      parameters:
      - description: add sql whitelist req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateAuditWhitelistReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加SQL白名单
      tags:
      - audit_whitelist
  /v1/audit_whitelist/{audit_whitelist_id}/:
    delete:
      description: remove sql white
      operationId: deleteAuditWhitelistByIdV1
      parameters:
      - description: audit whitelist id
        in: path
        name: audit_whitelist_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除SQL白名单信息
      tags:
      - audit_whitelist
    patch:
      consumes:
      - application/json
      description: update sql whitelist by id
      operationId: UpdateAuditWhitelistByIdV1
      parameters:
      - description: sql audit whitelist id
        in: path
        name: audit_whitelist_id
        required: true
        type: string
      - description: update sql whitelist req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateAuditWhitelistReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新SQL白名单
      tags:
      - audit_whitelist
  /v1/basic_info:
    get:
      description: get sqle basic info
      operationId: getSQLEInfoV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetSQLEInfoResV1'
      summary: 获取 sqle 基本信息
      tags:
      - global
  /v1/configurations/drivers:
    get:
      description: get drivers
      operationId: getDriversV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetDriversResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取当前 server 支持的审核类型
      tags:
      - configuration
  /v1/configurations/ldap:
    get:
      description: get LDAP configuration
      operationId: getLDAPConfigurationV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetLDAPConfigurationResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取 LDAP 配置
      tags:
      - configuration
    patch:
      consumes:
      - application/json
      description: update LDAP configuration
      operationId: updateLDAPConfigurationV1
      parameters:
      - description: update LDAP configuration req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.LDAPConfigurationReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加 LDAP 配置
      tags:
      - configuration
  /v1/configurations/license:
    get:
      description: get sqle license
      operationId: getSQLELicenseV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetLicenseResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取 sqle license
      tags:
      - configuration
    post:
      description: set sqle license
      operationId: setSQLELicenseV1
      parameters:
      - description: SQLE license file
        in: formData
        name: license_file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 导入 sqle license
      tags:
      - configuration
  /v1/configurations/license/check:
    post:
      description: parse and check sqle license
      operationId: parseSQLELicenseV1
      parameters:
      - description: SQLE license file
        in: formData
        name: license_file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.CheckLicenseResV1'
      security:
      - ApiKeyAuth: []
      summary: 解析和校验 sqle license
      tags:
      - configuration
  /v1/configurations/license/info:
    get:
      description: get information about the machine where SQLE is located
      operationId: GetSQLEServerInfoV1
      responses:
        "200":
          description: server info
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: 获取 sqle 所在机器的信息
      tags:
      - configuration
  /v1/configurations/smtp:
    get:
      description: get SMTP configuration
      operationId: getSMTPConfigurationV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetSMTPConfigurationResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取 SMTP 配置
      tags:
      - configuration
    patch:
      consumes:
      - application/json
      description: update SMTP configuration
      operationId: updateSMTPConfigurationV1
      parameters:
      - description: update SMTP configuration req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateSMTPConfigurationReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加 SMTP 配置
      tags:
      - configuration
  /v1/configurations/system_variables:
    get:
      description: get system variables
      operationId: getSystemVariablesV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetSystemVariablesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取系统变量
      tags:
      - configuration
    patch:
      consumes:
      - application/json
      description: update system variables
      operationId: updateSystemVariablesV1
      parameters:
      - description: update system variables request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateSystemVariablesReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 修改系统变量
      tags:
      - configuration
  /v1/dashboard:
    get:
      description: get dashboard info
      operationId: getDashboardV1
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetDashboardResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取 dashboard 信息
      tags:
      - dashboard
  /v1/instance_connection:
    post:
      consumes:
      - application/json
      description: test instance db connection 注：可直接提交创建实例接口的body，该接口的json 内容是创建实例的
        json 的子集
      operationId: checkInstanceIsConnectableV1
      parameters:
      - description: instance info
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.GetInstanceConnectableReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交前）
      tags:
      - instance
  /v1/instance_tips:
    get:
      description: get instance tip list
      operationId: getInstanceTipListV1
      parameters:
      - description: filter db type
        in: query
        name: filter_db_type
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例提示列表
      tags:
      - instance
  /v1/instances:
    get:
      description: get instance info list
      operationId: getInstanceListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: filter db type
        in: query
        name: filter_db_type
        type: string
      - description: filter db host
        in: query
        name: filter_db_host
        type: string
      - description: filter db port
        in: query
        name: filter_db_port
        type: string
      - description: filter db user
        in: query
        name: filter_db_user
        type: string
      - description: filter workflow rule template name
        in: query
        name: filter_workflow_template_name
        type: string
      - description: filter rule template name
        in: query
        name: filter_rule_template_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstancesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息列表
      tags:
      - instance
    post:
      consumes:
      - application/json
      description: create a instance
      operationId: createInstanceV1
      parameters:
      - description: add instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加实例
      tags:
      - instance
  /v1/instances/{instance_name}/:
    delete:
      description: delete instance db
      operationId: deleteInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除实例
      tags:
      - instance
    get:
      description: get instance db
      operationId: getInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息
      tags:
      - instance
    patch:
      description: update instance
      operationId: updateInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      - description: update instance request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新实例
      tags:
      - instance
  /v1/instances/{instance_name}/connection:
    get:
      description: test instance db connection
      operationId: checkInstanceIsConnectableByNameV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交后）
      tags:
      - instance
  /v1/instances/{instance_name}/rules:
    get:
      description: get instance all rule
      operationId: getInstanceRuleListV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRulesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例应用的规则列表
      tags:
      - instance
  /v1/instances/{instance_name}/schemas:
    get:
      description: instance schema list
      operationId: getInstanceSchemasV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceSchemaResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例 Schema 列表
      tags:
      - instance
  /v1/instances/{instance_name}/workflow_template:
    get:
      description: get instance workflow template
      operationId: getInstanceWorkflowTemplateV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceWorkflowTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例应用的工作流程模板
      tags:
      - instance
  /v1/login:
    post:
      description: user login
      operationId: loginV1
      parameters:
      - description: user login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.UserLoginReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserLoginResV1'
      summary: 用户登录
      tags:
      - user
  /v1/operations:
    get:
      description: get permission operations
      operationId: GetOperationsV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetOperationsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取权限动作列表
      tags:
      - operation
  /v1/role_tips:
    get:
      description: get role tip list
      operationId: getRoleTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRoleTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色提示列表
      tags:
      - role
  /v1/roles:
    get:
      consumes:
      - application/json
      deprecated: true
      description: get role list
      operationId: getRoleListV1
      parameters:
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRolesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      deprecated: true
      description: create role
      operationId: createRoleV1
      parameters:
      - description: create role
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - role
  /v1/roles/{role_name}/:
    delete:
      consumes:
      - application/json
      description: delete role
      operationId: deleteRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - role
    patch:
      consumes:
      - application/json
      deprecated: true
      description: update role
      operationId: updateRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      - description: update role request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - role
  /v1/rule_template_tips:
    get:
      description: get rule template tips
      operationId: getRuleTemplateTipsV1
      parameters:
      - description: filter db type
        in: query
        name: filter_db_type
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板提示
      tags:
      - rule_template
  /v1/rule_templates:
    get:
      description: get all rule template
      operationId: getRuleTemplateListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplatesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则模板列表
      tags:
      - rule_template
    post:
      consumes:
      - application/json
      description: create a rule template
      operationId: createRuleTemplateV1
      parameters:
      - description: add rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加规则模板
      tags:
      - rule_template
  /v1/rule_templates/{rule_template_name}/:
    delete:
      description: delete rule template
      operationId: deleteRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除规则模板
      tags:
      - rule_template
    get:
      description: get rule template
      operationId: getRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板信息
      tags:
      - rule_template
    patch:
      description: update rule template
      operationId: updateRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      - description: update rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新规则模板
      tags:
      - rule_template
  /v1/rule_templates/{rule_template_name}/clone:
    post:
      consumes:
      - application/json
      description: clone a rule template
      operationId: CloneRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      - description: clone rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CloneRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 克隆规则模板
      tags:
      - rule_template
  /v1/rules:
    get:
      description: get all rule template
      operationId: getRuleListV1
      parameters:
      - description: filter db type
        in: query
        name: filter_db_type
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRulesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则列表
      tags:
      - rule_template
  /v1/tasks/audits:
    post:
      consumes:
      - multipart/form-data
      description: |-
        create and audit a task, you can upload sql content in three ways, any one can be used, but only one is effective.
        1. formData[sql]: sql content;
        2. file[input_sql_file]: it is a sql file;
        3. file[input_mybatis_xml_file]: it is mybatis xml file, sql will be parsed from it.
      operationId: createAndAuditTaskV1
      parameters:
      - description: instance name
        in: formData
        name: instance_name
        required: true
        type: string
      - description: schema of instance
        in: formData
        name: instance_schema
        type: string
      - description: sqls for audit
        in: formData
        name: sql
        type: string
      - description: input SQL file
        in: formData
        name: input_sql_file
        type: file
      - description: input mybatis XML file
        in: formData
        name: input_mybatis_xml_file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskResV1'
      security:
      - ApiKeyAuth: []
      summary: 创建Sql审核任务并提交审核
      tags:
      - task
  /v1/tasks/audits/{task_id}/:
    get:
      description: get task
      operationId: getAuditTaskV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取Sql审核任务信息
      tags:
      - task
  /v1/tasks/audits/{task_id}/sql_content:
    get:
      description: get SQL content for the audit task
      operationId: getAuditTaskSQLContentV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskSQLContentResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核任务的SQL内容
      tags:
      - task
  /v1/tasks/audits/{task_id}/sql_file:
    get:
      description: download SQL file for the audit task
      operationId: downloadAuditTaskSQLFileV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: sql file
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: 下载指定审核任务的SQL文件
      tags:
      - task
  /v1/tasks/audits/{task_id}/sql_report:
    get:
      description: download report file of all SQLs information belong to the specified
        audit task
      operationId: downloadAuditTaskSQLReportV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      - description: select unique (fingerprint and audit result) for task sql
        in: query
        name: no_duplicate
        type: boolean
      responses:
        "200":
          description: sql report csv file
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: 下载指定审核任务的SQLs信息报告
      tags:
      - task
  /v1/tasks/audits/{task_id}/sqls:
    get:
      description: get information of all SQLs belong to the specified audit task
      operationId: getAuditTaskSQLsV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      - description: 'filter: exec status of task sql'
        enum:
        - initialized
        - doing
        - succeeded
        - failed
        in: query
        name: filter_exec_status
        type: string
      - description: 'filter: audit status of task sql'
        enum:
        - initialized
        - doing
        - finished
        in: query
        name: filter_audit_status
        type: string
      - description: 'filter: audit level of task sql'
        enum:
        - normal
        - notice
        - warn
        - error
        in: query
        name: filter_audit_level
        type: string
      - description: select unique (fingerprint and audit result) for task sql
        in: query
        name: no_duplicate
        type: boolean
      - description: page index
        in: query
        name: page_index
        type: string
      - description: page size
        in: query
        name: page_size
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskSQLsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核任务的SQLs信息
      tags:
      - task
  /v1/tasks/audits/{task_id}/sqls/{number}:
    patch:
      consumes:
      - application/json
      description: modify the relevant information of a certain SQL in the audit task
      operationId: updateAuditTaskSQLsV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      - description: sql number
        in: path
        name: number
        required: true
        type: string
      - description: modify the relevant information of a certain SQL in the audit
          task
        in: body
        name: audit_plan
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateAuditTaskSQLsReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 修改审核任务中某条SQL的相关信息
      tags:
      - task
  /v1/user:
    get:
      description: get current user info
      operationId: getCurrentUserV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update current user
      operationId: updateCurrentUserV1
      parameters:
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateCurrentUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新个人信息
      tags:
      - user
  /v1/user/password:
    put:
      consumes:
      - application/json
      description: update current user's password
      operationId: UpdateCurrentUserPasswordV1
      parameters:
      - description: update user's password
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateCurrentUserPasswordReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - user
  /v1/user_group_tips:
    get:
      description: get user group tip list
      operationId: getUserGroupTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserGroupTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户组提示列表
      tags:
      - user_group
  /v1/user_groups:
    get:
      description: get user group info list
      operationId: getUserGroupListV1
      parameters:
      - description: filter user group name
        in: query
        name: filter_user_group_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserGroupsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户组列表
      tags:
      - user_group
    post:
      consumes:
      - application/json
      description: create user group
      operationId: CreateUserGroupV1
      parameters:
      - description: create user group
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserGroupReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建用户组
      tags:
      - user_group
  /v1/user_groups/{user_group_name}/:
    delete:
      description: delete user group
      operationId: deleteUserGroupV1
      parameters:
      - description: user_group_name
        in: path
        name: user_group_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除用户组
      tags:
      - user_group
    patch:
      description: update user group
      operationId: updateUserGroupV1
      parameters:
      - description: user_group_name
        in: path
        name: user_group_name
        required: true
        type: string
      - description: update user group
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.PatchUserGroupReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新用户组
      tags:
      - user_group
  /v1/user_tips:
    get:
      description: get user tip list
      operationId: getUserTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户提示列表
      tags:
      - user
  /v1/users:
    get:
      description: get user info list
      operationId: getUserListV1
      parameters:
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUsersResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      operationId: createUserV1
      parameters:
      - description: create user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - user
  /v1/users/{user_name}/:
    delete:
      description: delete user
      operationId: deleteUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - user
    get:
      description: get user info
      operationId: getUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user
      operationId: updateUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - user
  /v1/users/{user_name}/password:
    patch:
      consumes:
      - application/json
      description: admin modifies the passwords of other users
      operationId: UpdateOtherUserPasswordV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      - description: change user's password
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateOtherUserPasswordReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: admin修改其他用户密码
      tags:
      - user
  /v1/workflow_template_tips:
    get:
      description: get workflow template tips
      operationId: getWorkflowTemplateTipsV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplateTipResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板提示信息
      tags:
      - workflow
  /v1/workflow_templates:
    get:
      description: get workflow template list
      operationId: getWorkflowTemplateListV1
      parameters:
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplatesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板列表
      tags:
      - workflow
    post:
      consumes:
      - application/json
      description: create a workflow template
      operationId: createWorkflowTemplateV1
      parameters:
      - description: create workflow template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateWorkflowTemplateReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建Sql审批流程模板
      tags:
      - workflow
  /v1/workflow_templates/{workflow_template_name}/:
    delete:
      consumes:
      - application/json
      description: update the workflow template
      operationId: deleteWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除Sql审批流程模板
      tags:
      - workflow
    get:
      description: get workflow template detail
      operationId: getWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板详情
      tags:
      - workflow
    patch:
      consumes:
      - application/json
      description: update the workflow template
      operationId: updateWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      - description: create workflow template
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateWorkflowTemplateReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新Sql审批流程模板
      tags:
      - workflow
  /v1/workflows:
    get:
      description: get workflow list
      operationId: getWorkflowListV1
      parameters:
      - description: filter subject
        in: query
        name: filter_subject
        type: string
      - description: filter create time from
        in: query
        name: filter_create_time_from
        type: string
      - description: filter create time to
        in: query
        name: filter_create_time_to
        type: string
      - description: filter create user name
        in: query
        name: filter_create_user_name
        type: string
      - description: filter current step type
        enum:
        - sql_review
        - sql_execute
        in: query
        name: filter_current_step_type
        type: string
      - description: filter workflow status
        enum:
        - on_process
        - rejected
        - canceled
        - exec_scheduled
        - executing
        - exec_failed
        - finished
        in: query
        name: filter_status
        type: string
      - description: filter current step assignee user name
        in: query
        name: filter_current_step_assignee_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_task_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程列表
      tags:
      - workflow
    post:
      consumes:
      - application/json
      description: create workflow
      operationId: createWorkflowV1
      parameters:
      - description: create workflow request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateWorkflowReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建工单
      tags:
      - workflow
  /v1/workflows/{workflow_id}/:
    get:
      description: get workflow detail
      operationId: getWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程详情
      tags:
      - workflow
    patch:
      consumes:
      - application/json
      description: update workflow when it is rejected to creator.
      operationId: updateWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: update workflow request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateWorkflowReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新审批流程（驳回后才可更新）
      tags:
      - workflow
  /v1/workflows/{workflow_id}/cancel:
    post:
      description: cancel workflow
      operationId: cancelWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批关闭（中止）
      tags:
      - workflow
  /v1/workflows/{workflow_id}/schedule:
    put:
      consumes:
      - application/json
      description: update workflow schedule.
      operationId: updateWorkflowScheduleV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: update workflow schedule request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateWorkflowScheduleV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 设置工单定时上线时间（设置为空则代表取消定时时间，需要SQL审核流程都通过后才可以设置）
      tags:
      - workflow
  /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approve:
    post:
      description: approve workflow
      operationId: approveWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: workflow step id
        in: path
        name: workflow_step_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批通过
      tags:
      - workflow
  /v1/workflows/{workflow_id}/steps/{workflow_step_id}/reject:
    post:
      description: reject workflow
      operationId: rejectWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: workflow step id
        in: path
        name: workflow_step_id
        required: true
        type: string
      - description: workflow approve request
        in: body
        name: workflow_approve
        required: true
        schema:
          $ref: '#/definitions/v1.RejectWorkflowReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批驳回
      tags:
      - workflow
  /v1/workflows/{workflow_id}/task/execute:
    post:
      description: execute task on workflow
      operationId: executeTaskOnWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 工单提交 SQL 上线
      tags:
      - workflow
  /v1/workflows/cancel:
    post:
      description: batch cancel workflows
      operationId: batchCancelWorkflowsV1
      parameters:
      - description: batch cancel workflows request
        in: body
        name: BatchCancelWorkflowsReqV1
        required: true
        schema:
          $ref: '#/definitions/v1.BatchCancelWorkflowsReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 批量取消工单
      tags:
      - workflow
  /v2/audit_plans/{audit_plan_name}/report/{audit_plan_report_id}/:
    get:
      description: get audit plan report SQLs
      operationId: getAuditPlanReportSQLsV2
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: audit plan report id
        in: path
        name: audit_plan_report_id
        required: true
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.GetAuditPlanReportSQLsResV2'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划的SQL审核详情
      tags:
      - audit_plan
  /v2/audit_plans/{audit_plan_name}/sqls:
    get:
      description: get audit plan SQLs
      operationId: getAuditPlanSQLsV2
      parameters:
      - description: audit plan name
        in: path
        name: audit_plan_name
        required: true
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.GetAuditPlanSQLsResV2'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核计划的SQLs信息(不包括审核结果)
      tags:
      - audit_plan
  /v2/roles:
    get:
      consumes:
      - application/json
      description: get role list
      operationId: getRoleListV2
      parameters:
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.GetRolesResV2'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      description: create role
      operationId: createRoleV2
      parameters:
      - description: create role
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v2.CreateRoleReqV2'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - role
  /v2/roles/{role_name}/:
    patch:
      consumes:
      - application/json
      description: update role
      operationId: updateRoleV2
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      - description: update role request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v2.UpdateRoleReqV2'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - role
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

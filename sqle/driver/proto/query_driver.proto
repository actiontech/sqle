syntax = "proto3";
package proto;
option go_package = "./;proto";
import "driver.proto";

service QueryDriver {
  // Init will should be called at first before calling following methods.
  // It will pass some necessary info to plugin server. In the beginning,
  // we consider that put this info to the executable binary environment.
  // We put all communication on gRPC for unification in the end.
  rpc Init(InitRequest) returns (Empty);
  rpc QueryPrepare(QueryPrepareRequest) returns (QueryPrepareResponse);
  rpc Query(QueryRequest) returns (QueryResponse);

}

message QueryPrepareRequest {
  string sql = 1;
  QueryPrepareConf conf = 2;
}

message QueryPrepareConf {
  uint32 limit = 1;
  uint32 offset = 2;
}

message QueryPrepareResponse {
  string newSql = 1;
  string errorType = 2;
  string error = 3;
}

message QueryRequest {
  string sql = 1;
  QueryConf conf = 2;
}

message QueryConf {
  uint32 timeOutSecond = 1;
}

message QueryResponse {
  repeated Param column = 1;
  repeated QueryResultRow rows = 2;
}

message QueryResultRow {
  repeated QueryResultValue values = 1;
}

message QueryResultValue {
  string value = 1;
}
<?xml version='1.0' encoding='UTF-8'?>
<Rule>
    <规则编号>SQLE00054</规则编号>
    <级别>error</级别>
    <数据库类型>MySQL</数据库类型>
    <规则种类>数据类型最佳实践</规则种类>
    <规则简述>建议主键字段使用BIGINT时采用无符号的BIGINT</规则简述>
    <规则描述>在设计主键时若选择BIGINT时，使用无符号类型，相对于有符号类型，可以使数据库的索引性能更加优化，因为它减少了负值处理的开销，并能在某些情况下提高查询速度。特别是在系统设计初期可能无法完全预见到未来数据量的情况下，无符号数值类型（BIGINT UNSIGNED）可以有效避免因数据增长导致的溢出问题。</规则描述>
    <规则场景>
        <原理说明 关键词="CREATE TABLE、ALTER TABLE" 数据库版本="MySQL 所有版本" 检查方式="不连库审核">
            <示例>
                原理说明：
                1. BIGINT，也就是64位整型，默认有符号。取值范围是-pow(2,63) 到 pow(2,63)-1.
                2. BIGINT UNSIGNED，表示无符号的64位整型，也就是没有负数，只有正数。 取值范围是：0 到 pow(2,64)-1。
                3. 很明显 BIGINT UNSIGNED 比 BIGINT 取值范围大，不容易发生存储溢出的问题。

                示例：
```sql
                create table customers(
                    id bigint not null primary key,
                    name varchar(32) default '' not null, -- 序号
                    sex int default 0, -- 性别
                    age int default 0 -- 年龄
                );

```
                示例验证：
```sql
                -- 插入ID 为pow(2,63)的记录，插入失败，反馈是列定义溢出。
                (mysql:8.3.0:db_mysql)insert into customers values (9.223372036854776e18,'小张',0,20);
                ERROR 1264 (22003): Out of range value for column 'id' at row 1
                
                -- 更改字段ID 为 无符号INT 64 位
                (mysql:8.3.0:db_mysql)alter table customers modify id bigint unsigned not null;
                Query OK, 0 rows affected (0.11 sec)
                Records: 0  Duplicates: 0  Warnings: 0
                
                -- 再次插入同样的记录，插入成功
                (mysql:8.3.0:db_mysql)insert into customers values (9.223372036854776e18,'小张',0,20);
                Query OK, 1 row affected (0.02 sec)
                
                (mysql:8.3.0:db_mysql)select * from customers;
                +---------------------+--------+------+------+
                | id                  | name   | sex  | age  |
                +---------------------+--------+------+------+
                | 9223372036854775808 | 小张   |    0 |   20 |
                +---------------------+--------+------+------+
                1 row in set (0.00 sec)
                
```
                结论：
                1. 主键最好是定义为BIGINT UNSIGNED ，比BIGINT 支持的数据范围要大，很难发生插入溢出的错误。
                2. BIGINT UNSIGNED 定义为主键有两种方式：
                   1. 创建表时主键字段预定义：
```sql
                    create table customers(
                        id bigint unsigned not null primary key,
                        name varchar(32) default '' not null, -- 序号
                        sex int default 0, -- 性别
                        age int default 0 -- 年龄
                    );
```
                   2. 创建表后修改主键字段定义：
```sql
                    alter table customers modify id bigint unsigned not null;
```
                    或者使用
```sql
                    alter table customers change id id bigint unsigned not null;

```
            </示例>
            <检查流程描述>
                1. 对于"CREATE TABLE..."语句，如果主键字段类型为bigint，且没有定义为 UNSIGNED，则报告违反规则。
                2. 对于"ALTER TABLE..."语句，执行上述相同的检查。
            </检查流程描述>
            <知识文档>
                1. CREATE TABLE 官方文档： https://dev.mysql.com/doc/refman/8.3/en/create-table.html
                2. ALTER TABLE 官方文档： https://dev.mysql.com/doc/refman/8.3/en/alter-table.html
                3. 数据类型 官方文档： https://dev.mysql.com/doc/refman/8.4/en/data-types.html
            </知识文档>
        </原理说明>
    </规则场景>
<标签><分类 名称="操作对象"><分类值>字段</分类值></分类><分类 名称="SQL分类"><分类值>DDL</分类值><分类值>完整性约束</分类值></分类><分类 名称="审核目的"><分类值>发现性能问题</分类值></分类><分类 名称="审核精确度"><分类值>不连库审核</分类值></分类></标签><完成情况>完成</完成情况></Rule>
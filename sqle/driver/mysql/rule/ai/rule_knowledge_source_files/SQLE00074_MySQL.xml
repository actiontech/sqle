<?xml version='1.0' encoding='UTF-8'?>
<Rule>
  <规则编号>SQLE00074</规则编号>
  <级别>error</级别>
  <数据库类型>MySQL</数据库类型>
  <规则种类>DDL操作风险防范</规则种类>
  <规则简述>禁止对表名字或段名进行重命名</规则简述>
  <规则描述>对表名或列名进行重命名操作会直接影响线上业务的稳定性和连续性。这种操作可能引起与表或列相关的SQL语句执行失败，导致业务中断。</规则描述>
  <规则场景>
    <场景 名称="修改表、字段名称" 数据库版本="大于等于 MySQL 5.7 " 检查方式="不连库审核" 适用句型="ALTER TABLE">
      <示例>
          前置：
```sql
          create database db_mysql;
          use db_mysql;

          -- 示例表结构
          CREATE TABLE customers(
            id INT NOT NULL, -- 序号
            name VARCHAR(32) DEFAULT 'lucy',-- 姓名
            sex int NOT NULL default 0, -- 性别
            city VARCHAR(32) NOT NULL default 'beijing', -- 所在城市
            age INT NOT NULL default 0, -- 值类型
            PRIMARY KEY (id) -- 主键
          );

```
          原理说明：
          1. 业务中断风险： 如果在线上环境中直接执行RENAME或CHANGE命令更改表名或列名，所有引用了原名的SQL语句（如查询、更新、删除等）将无法找到对应的表或列，从而导致这些操作失败并抛出错误，影响用户体验。
          2. 数据一致性问题： 更改表名或列名后，如果业务应用层没有同步更新，可能会出现数据不一致的情况。例如，一些业务逻辑可能依然在尝试访问旧的表名或列名，而这些操作不会被正确地执行。
          3. 系统维护复杂度增加： 更改表名或列名需要同步更新所有相关的存储过程、触发器、视图和其他数据库对象，这不仅增加了系统维护的复杂性，也增加了出错的可能性。
          4. 应用层代码变更： 除了数据库内的变更外，应用代码也必须修改以引用新的表名或列名。这需要跨部门的协调和额外的代码审查，以确保所有引用都已正确更新。
          5. 测试和部署： 更改表名或列名后，必须在生产环境部署前在测试环境中进行广泛的测试，以验证所有功能仍然正常工作。这增加了部署的时间和成本。


          示例：

          修改表名：
```sql
          alter table customers rename to customers_new;
          rename table customers to customers_new;

```
          修改列名：
```sql
          alter table customers rename column id to id_no;
          alter table customers change id id_new int;
  

```
          示例说明：
          1. 此示例修改表customers 的表名、字段名。

          示例验证： 修改表名、修改字段名都会造成业务中断，只验证一种即可。
          1. 表和字段没改名之前的业务：都很正常。
```sql
          (mysql:8.3.0:db_mysql)insert into customers values (1,'小贾',0,'深圳',33);
          Query OK, 1 row affected (0.04 sec)

          (mysql:8.3.0:db_mysql)update customers set age = 25 where id = 1;
          Query OK, 1 row affected (0.04 sec)
          Rows matched: 1  Changed: 1  Warnings: 0

          (mysql:8.3.0:db_mysql)select * from customers ;
          +----+--------+-----+--------+-----+
          | id | name   | sex | city   | age |
          +----+--------+-----+--------+-----+
          |  1 | 小贾   |   0 | 深圳   |  25 |
          +----+--------+-----+--------+-----+
          1 row in set (0.01 sec)

          (mysql:8.3.0:db_mysql)delete from customers;
          Query OK, 1 row affected (0.04 sec)

```
          2. 改名之后，原先的业务没有及时变更，直接报错中断
```sql
          (mysql:8.3.0:db_mysql)alter table customers rename to customers_new;
          Query OK, 0 rows affected (0.04 sec)

          (mysql:8.3.0:db_mysql)insert into customers values (1,'小贾',0,'深圳',33);
          ERROR 1146 (42S02): Table 'db_mysql.customers' doesn't exist

          (mysql:8.3.0:db_mysql)update customers set age = 25 where id = 1;
          ERROR 1146 (42S02): Table 'db_mysql.customers' doesn't exist

          (mysql:8.3.0:db_mysql)select * from customers ;
          ERROR 1146 (42S02): Table 'db_mysql.customers' doesn't exist

          (mysql:8.3.0:db_mysql)delete from customers;
          ERROR 1146 (42S02): Table 'db_mysql.customers' doesn't exist


```
          结论：
          1. 禁止对表名、表字段改名操作，此为高危操作，将会影响所有包含包含被改名表、被改名字段的业务正确性。

      </示例>
      <检查流程描述>
        1. 对于 "ALTER TABLE ... RENAME ..."语句，如果存在以下任何一项，则报告违反规则：
          1. 检查是否有关键词 RENAME
        2. 对于 "RENAME TABLE ..." 语句，执行与上述同样检查。
        3. 对于 "ALTER TABLE ... CHANGE ..." 语句
           1. 定义一个集合
           2. 把CHANGE 后的两个字段名字放入集合中
           3. 对比集合中的两个字段名，如果不一样，则报告违反规则。
      </检查流程描述>
      <知识文档>
        1. ALTER TABLE 官方文档：https://dev.mysql.com/doc/refman/8.0/en/alter-table.html
      </知识文档>
    </场景>
  </规则场景>
  <规则缺陷 />
<标签><分类 名称="操作对象"><分类值>表</分类值><分类值>字段</分类值></分类><分类 名称="SQL分类"><分类值>DDL</分类值></分类><分类 名称="审核目的"><分类值>增强可维护性</分类值></分类><分类 名称="审核精确度"><分类值>不连库审核</分类值></分类></标签><完成情况>完成</完成情况></Rule>
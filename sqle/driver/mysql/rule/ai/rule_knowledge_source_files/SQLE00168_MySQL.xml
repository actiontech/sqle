<?xml version='1.0' encoding='UTF-8'?>
<Rule>
    <规则编号>SQLE00168</规则编号>
    <级别>warn</级别>
    <数据库类型>MySQL</数据库类型>
    <规则种类>DDL操作风险防护</规则种类>
    <适用性>不适用当前数据库</适用性>
    <规则简述>序列cache值设置不合理</规则简述>
    <规则描述>对于在线交易型应用，cache值过小会影响数据写入速度。cache值过大，有可能浪费cache，导致数据分布不均</规则描述>
    <规则场景>
    <原理说明 数据库版本="所有MySQL 版本 " 检查方式="不连库审核" 适用句型="CREATE TABLE、ALTER TABLE">
    <示例>
        原理说明：              
        1. MySQL没有序列，只有字段的自增属性：auto_increment。
        2. MySQL的 auto_increment 属性一般是为了给主键生成一个自动增长的序号。 与 Oracle 序列不同，MySQL的自增序列并不支持缓存机制，每次生成时都需要实时的计算下一个值，所以也不存在缓存设置的合理性问题。
        3. 此规则不适用于MySQL数据库。自增序列的使用参考规则 SQLE00052。

        结论：
        1. MySQL 的自增字段无法设置CACHE值，自增字段每次的增长都通过实时计算字段的最大值加1作为下一个值。
        2. 此规则不适用于MySQL。

    </示例>
    <知识文档>
      1. AUTO_INCREMENT 官方文档：https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html
    </知识文档>
    </原理说明>
   
</规则场景>
<关联规则>
SQLE00166、SQLE00167
</关联规则>  
<标签><分类 名称="操作对象"><分类值>序列</分类值></分类><分类 名称="SQL分类"><分类值>DDL</分类值></分类><分类 名称="审核目的"><分类值>保障正确性</分类值></分类><分类 名称="审核精确度"><分类值>不连库审核</分类值></分类></标签><完成情况>完成</完成情况></Rule>
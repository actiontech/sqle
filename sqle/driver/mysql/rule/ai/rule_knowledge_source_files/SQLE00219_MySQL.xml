<?xml version='1.0' encoding='UTF-8'?>
<Rule>
    <规则编号>SQLE00219</规则编号>
    <级别>warn</级别>
    <数据库类型>MySQL</数据库类型>
    <规则种类>数据生命周期管理</规则种类>
    <规则简述>建表DDL必须包括创建时间字段，并应确保该字段能记录表记录的创建时间。</规则简述>
    <规则变量>
        <变量 name="创建时间字段名">create_time</变量>
    </规则变量>
    <规则描述>使用创建时间字段，有利于问题查找跟踪和检索数据，同时避免后期对数据生命周期管理不便 ，可保证时间的准确性</规则描述>
    <规则场景>
        <场景 名称="表结构定义" 数据库版本="MySQL 所有版本" 检查方式="不连库审核" 适用句型="CREATE TABLE、ALTER TABLE">
            <示例>  
            前置：
            create database db_mysql;
            use db_mysql;

            反例：
            CREATE TABLE customers(
                id INT NOT NULL, -- 序号
                name VARCHAR(32) DEFAULT '',-- 姓名
                sex TINYINT NOT NULL, -- 性别
                city VARCHAR(32) NOT NULL, -- 所在城市
                age SMALLINT NOT NULL, -- 值类型
                PRIMARY KEY (id) -- 主键
            );
            
            反例说明：
            建表语句中未定义规则中约定的create_time字段。
    
            反例验证：
            
            -- 插入模拟数据 1条。
            insert into customers(id,name,sex,city,age) values (1,'lily1',1,'shanghai',20);

            -- 查询表记录：
            (mysql:8.0.31-cluster)select * from customers;
            +----+-------+-----+----------+-----+
            | id | name  | sex | city     | age |
            +----+-------+-----+----------+-----+
            |  1 | lily1 |   1 | shanghai |  20 |
            +----+-------+-----+----------+-----+
            1 row in set (0.00 sec)


            正例：
            CREATE TABLE customers(
                id INT NOT NULL, -- 序号
                name VARCHAR(32) DEFAULT '',-- 姓名
                sex TINYINT NOT NULL, -- 性别
                city VARCHAR(32) NOT NULL, -- 所在城市
                age SMALLINT NOT NULL, -- 值类型
                create_time datetime default CURRENT_TIMESTAMP,
                PRIMARY KEY (id) -- 主键
            );

            正例说明：
            1. 建表时根据业务需要，包含字段create_time且为 timestamp类型，且指定了默认值为CURRENT_TIMESTAMP。
            2. 后续对表进行数据写入时，自动记录当前写入时间到该字段上，有助于问题排查定位。

            正例验证：
            -- 插入模拟数据 1 条。
            insert into customers(id,name,sex,city,age) values (1,'lily1',1,'shanghai',20);

            -- 查询表记录： 时间字段默认不指定，插入后新值即为默认。
            (mysql:8.0.31-cluster)select * from customers;
            +----+-------+-----+----------+-----+---------------------+
            | id | name  | sex | city     | age | create_time         |
            +----+-------+-----+----------+-----+---------------------+
            |  1 | lily1 |   1 | shanghai |  20 | 2024-05-06 18:42:05 |
            +----+-------+-----+----------+-----+---------------------+
            1 row in set (0.00 sec)           

            结论：
            在设计数据库时，对于需要追踪修改历史表，则应定义一个字段类型为timestamp的创建时间字段，且应设置其 DEFAULT值为CURRENT_TIMESTAMP。在表记录发生数据写入时，能够自动记录创建时间，提高数据的精确性和维护的有效性。这种自动记录创建时间特别适用于错误追踪和数据审计场景，帮助管理员准确判断数据的第一次创建时间，从而提高问题解决的效率。

            其他示例：
            alter table customers add create_time timestamp DEFAULT CURRENT_TIMESTAMP;
            alter table customers modify create_time timestamp DEFAULT CURRENT_TIMESTAMP;
            alter table customers change create_time create_time timestamp DEFAULT CURRENT_TIMESTAMP;


            </示例>
            <检查流程描述>
            1. 对于"CREATE TABLE..."语句，检查以下条件，如果有任意一个条件不满足，则报告违反规则：
                1. 该表应该有一个创建时间的列，类型是timestamp，列名应用与规则变量值相同。
                2. 更新时间列的默认值应该配置为` CURRENT_TIMESTAMP `
            2. 对于"ALTER TABLE..."语句，如果增加或变更的字段列名是与规则变量值相同，则检查以下条件，如果有任意一个条件不满足，则报告违反规则：
                1. 其数据类型应该是timestamp。
                2. 该创建时间列的默认值应该配置为` CURRENT_TIMESTAMP `
            </检查流程描述>
            <知识文档>
            1. 时间字段默认值官方文档： https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html
            </知识文档>
        </场景>    
    </规则场景>
    <标签><分类 名称="操作对象"><分类值>表</分类值></分类><分类 名称="SQL分类"><分类值>DDL</分类值></分类><分类 名称="审核目的"><分类值>发现性能问题</分类值></分类><分类 名称="审核精确度"><分类值>不连库审核</分类值></分类></标签><完成情况>完成</完成情况></Rule>
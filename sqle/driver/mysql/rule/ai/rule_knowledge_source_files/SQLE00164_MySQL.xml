<?xml version='1.0' encoding='UTF-8'?>
<Rule>
    <规则编号>SQLE00164</规则编号>
    <级别>warn</级别>
    <数据库类型>MySQL</数据库类型>
    <规则种类>使用建议</规则种类>
    <适用性>不适用当前数据库</适用性>
    <规则简述>禁止使用并行属性</规则简述>
    <规则描述>并行对系统资源占用大，可能产生严重的性能问题。</规则描述>
    <规则场景>
      <原理说明 名称="使用并行查询" 数据库版本="MySQL所有版本">
      <示例>
          前置：示例表结构
          create database db_mysql;
          use db_mysql;

          CREATE TABLE customers(
            id INT(11) NOT NULL, -- 序号
            name VARCHAR(32) DEFAULT '',-- 姓名
            sex TINYINT NOT NULL, -- 性别
            city VARCHAR(32) NOT NULL, -- 所在城市
            age SMALLINT(4) NOT NULL, -- 值类型
            PRIMARY KEY (id) -- 主键
          );


          -- 插入模拟数据,500W 条。
          set @@cte_max_recursion_depth=20000000;
          insert into customers  
          with recursive tmp (a,b,c,d,e) as (
            select 1,'小王22222333',floor(rand()*2),'上海',ceil(rand()*30)+20 
            union all 
            select a+1,concat('小王',a),floor(rand()*2),'上海',ceil(rand()*20)+20 from tmp where a &lt; 5000000) 
            select * from tmp;
      

          原理说明：
          使用并行查询的缺点主要有以下几点：
          1. 硬件和软件要求高：并行查询需要支持多个 CPU 或服务器的硬件和软件环境，这可能需要更高的成本和复杂的配置。
          2. 不适用于所有查询：并行查询通常适用于大型数据集的查询，而对于小型数据集的查询，使用并行查询可能不会带来太大的优势。
          3. 可能影响其他查询性能：并行查询可能会占用大量的系统资源，从而影响其他查询的性能。
          4. 调试困难：并行查询的调试比较困难，因为涉及多个 CPU 或服务器的处理，并且数据的并行分配也可能会导致数据一致性的问题。
          5. 所以在使用并行查询时，需要根据具体情况来权衡其利弊，以确保最终的查询结果正确和可靠。同时，也需要注意合理设置并行度，避免过度使用并行查询导致系统性能下降。
          6. MySQL 查询语句不支持并行处理，并行功能仅存在在线DDL范畴，参考规则SQLE00163。所以此规则不适用于MySQL。 


          示例：
          select count(*),age from customers group by age;

          示例说明：
          1. 从客户表里求取每个年龄的分组个数。

          示例验证： 
          1. 执行时间 5秒。
          (mysql:8.4.0:db_mysql)select count(*),age from customers group by age;
          +----------+-----+
          | count(*) | age |
          +----------+-----+
          |   249311 |  27 |
          |   250034 |  35 |
          |   249858 |  34 |
          |   251528 |  29 |
          |   250676 |  26 |
          |   249554 |  25 |
          |   250277 |  31 |
          |   249624 |  23 |
          |   249987 |  36 |
          |   249376 |  22 |
          |   250521 |  39 |
          |   249893 |  33 |
          |   249692 |  30 |
          |   250759 |  24 |
          |   248936 |  37 |
          |   249703 |  21 |
          |   250362 |  28 |
          |   249390 |  32 |
          |   250351 |  38 |
          |   250168 |  40 |
          +----------+-----+
          20 rows in set (4.98 sec)

          2. 查看执行计划：全表扫customers的成本为50913
          
          (mysql:8.4.0:db_mysql)explain format=tree select count(*),age from customers group by age;
          +-------------------------------------------------------------------------------------------------------------------------------------+
          | EXPLAIN                                                                                                                             |
          +-------------------------------------------------------------------------------------------------------------------------------------+
          | - Table scan on &lt;temporary&gt;
              - Aggregate using temporary table
                  - Table scan on customers  (cost=509103 rows=4.98e+6)
           |
          +-------------------------------------------------------------------------------------------------------------------------------------+
          1 row in set (0.01 sec)
          
          3. 修改 DDL 参数，关闭并行DDL。
          
          (mysql:8.4.0:db_mysql)set innodb_ddl_threads=1;
          Query OK, 0 rows affected (0.00 sec)
          
          (mysql:8.4.0:db_mysql)show variables like '%DDL%';
          +------------------------+---------+
          | Variable_name          | Value   |
          +------------------------+---------+
          | innodb_ddl_buffer_size | 1048576 |
          | innodb_ddl_threads     | 1       |
          | innodb_print_ddl_logs  | OFF     |
          +------------------------+---------+
          3 rows in set (0.01 sec)

          4. 再次执行，时间没有变化。
          
          (mysql:8.4.0:db_mysql)select count(*),age from customers group by age;
          +----------+-----+
          | count(*) | age |
          +----------+-----+
          |   249311 |  27 |
          |   250034 |  35 |
          |   249858 |  34 |
          |   251528 |  29 |
          |   250676 |  26 |
          |   249554 |  25 |
          |   250277 |  31 |
          |   249624 |  23 |
          |   249987 |  36 |
          |   249376 |  22 |
          |   250521 |  39 |
          |   249893 |  33 |
          |   249692 |  30 |
          |   250759 |  24 |
          |   248936 |  37 |
          |   249703 |  21 |
          |   250362 |  28 |
          |   249390 |  32 |
          |   250351 |  38 |
          |   250168 |  40 |
          +----------+-----+
          20 rows in set (5.14 sec)
          
          5. 查看执行计划： 还是老样子。
          (mysql:8.4.0:db_mysql)explain format=tree select count(*),age from customers group by age;
          +-------------------------------------------------------------------------------------------------------------------------------------+
          | EXPLAIN                                                                                                                             |
          +-------------------------------------------------------------------------------------------------------------------------------------+
          | - Table scan on &lt;temporary&gt;
              - Aggregate using temporary table
                  - Table scan on customers  (cost=509103 rows=4.98e+6)
           |
          +-------------------------------------------------------------------------------------------------------------------------------------+
          1 row in set (0.00 sec)
          
          (mysql:8.4.0:db_mysql)
                   

          总结：
          1. MySQL 里查询表并不能使用并行，并行只存在于DDL 操作。 所以此规则不适用于MySQL数据库。
               
        </示例>

        <知识文档>
          1. MySQL 并行官方文档： https://dev.mysql.com/doc/refman/8.4/en/online-ddl-parallel-thread-configuration.html
        </知识文档>
      </原理说明>
    </规则场景>
    <关联规则>SQLE00163、SQLE00165</关联规则>
  <标签><分类 名称="操作对象"><分类值>索引</分类值><分类值>表</分类值></分类><分类 名称="SQL分类"><分类值>DDL</分类值></分类><分类 名称="审核目的"><分类值>发现性能问题</分类值></分类><分类 名称="审核精确度" /></标签><完成情况>完成</完成情况></Rule>